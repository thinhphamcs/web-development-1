@charset "utf-8";

/*
   New Perspectives on HTML5 and CSS3, 7th Edition
   Tutorial 4
   Case Problem 3

   Design Styles for the Chupacabra Music Fest
   Author: ThinhPham & 244079
   Date: 3/15/2018

   Filename: cf_effects.css

*/

/* HTML Styles */

/*
Step 3:
Add a style rule for the html element that displays the cf_back1.png as a
fixed background, centered horizontally and vertically in the browser window
and covering the entire window.
*/
html {
  background: url(cf_back1.png) fixed;
  background-position: center center;
  background-size: cover;
}

/* Body Styles */

/*
Step 4:
Set the background color of the page body to rgba(255, 255, 255, 0.3).
*/
body {
  background-color: rgba(255, 255, 255, 0.3);
}

/* Body Header Styles */

/*
Step 5:
Change the background color of the body header to rgba(51, 51, 51, 0.5).
*/
body > header {
  background-color: rgba(51, 51, 51, 0.5);
}

/* Aside Styles */

/*
Step 6:
Create a style rule for the section aside selector that adds a 10-pixel double
border with color rgba(92, 42, 8, 0.3) and a border radius of 30 pixels.
*/
section aside {
  border: 10px double rgba(92, 42, 8, 0.3);
  border-radius: 30px;
}

/*
Step 7:
Create a style rule that sets the border radius of the top-left and top-right
corners to 30 pixels.
*/
section aside h1 {
  border-radius: 30px 30px 0 0;
}

/*
Step 8:
Creating a style rule for those two sections that sets their perspective value
to 450 pixels
*/
section {
  perspective: 450px;
}

/*
Step 9:
Create a style rule that rotates the aside elements within the left section 25°
around the y-axis.
Create another style rule that rotates the aside elements within the right
section –25° around the y-axis.
*/
section#left > aside {
  transform: rotateY(25deg);
}

section#right > aside {
  transform: rotateY(-25deg);
}

/* Cube Styles */

/*
Step 10:
Create the receding cube effect that appears in the center of the page.
The cube has been constructed by creating a div element with the id cube
containing five div elements belonging to the cube_face class with the ids
cube_bottom, cube_top, cube_left, cube_right, and cube_front.
(There will be no back face for this cube.)
Currently the five faces are superimposed upon each other.
To create the cube you have to shift and rotate each face in 3D space so that
they form the five faces of the cube. First, position the cube on the page by
creating a style rule for the div#cube selector containing the following styles:
a. Place the element using relative positioning.
b. Set the top margin to 180 pixels, the bottom margin to 150 pixels,
and the left/right margins to auto.
c. Set the width and height to 400 pixels.
d. Set the perspective of the space to 450 pixels.
*/
div#cube {
  position: relative;
  margin-top: 180px;
  margin-bottom: 150px;
  margin-left: auto;
  margin-right: auto;
  width: 400px;
  height: 400px;
  perspective: 450px;
}

/*
Step 11:
For each div element of the cube_face class, create a style rule that places
the faces with absolute positioning and sets their width and height to 400px
*/
div.cube_face {
  position: absolute;
  width: 400px;
  height: 400px;
}

/*
Step 12:
Finally, you’ll construct the cube by positioning each of the five faces in
3D space so that they form the shape of a cube.
Add the following style rules for each of the five faces to transform their
appearance.
a. Translate the cube_front div element –50 pixels along the z-axis.
b. Translate the cube_left div element –200 pixels along the x-axis and rotate
it 90° around the y-axis.
c. Translate the cube_right div element 200 pixels along the x-axis and rotate
it 90° counter-clockwise around the y-axis.
d. Translate the cube_top div element –200 pixels along the y-axis and rotate it
90° counter-clockwise around the x-axis.
e. Translate the cube_bottom div element 200 pixels along the y-axis and rotate
it 90° around the x-axis.
*/
div#cube_front {
  transform: translateZ(-50px);
}
div#cube_left {
  transform: translateX(-200px) rotateY(90deg);
}
div#cube_right {
  transform: translateX(200px) rotateY(-90deg);
}
div#cube_top {
  transform: translateY(-200px) rotateX(-90deg);
}
div#cube_bottom {
  transform: translateY(200px) rotateX(90deg);
}
